name: Flutter CI

on:
  push:
    branches:
      - build
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Get key_store from b64
        id: android_keystore
        run: |
          echo "${{ secrets.KEY_STORE }}" | base64 --decode > android/app/key_store.jks
          echo "::set-output name=filePath::key_store.jks"

      - name: Setup key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties

      - uses: actions/setup-java@v3
        with:
          java-version: "12.x"
          distribution: "zulu"
          cache: gradle

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - run: flutter pub get
      - run: flutter build apk

      - name: Get Version
        id: version
        run: echo ::set-output name=version::$(cat pubspec.yaml | grep version | head -1 | awk '{print $2}' | sed "s/\'//g" | cut -f1 -d"+")

      # - uses: actions/upload-artifact@v1
      #   with:
      #     name: release-apk
      # path: build/app/outputs/apk/release/app-release.apk

      - name: Create a Release APK
        uses: marvinpinto/action-automatic-releases@latest

        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ steps.version.outputs.version }}
          title: "Release ${{ steps.version.outputs.version }}"
          prerelease: false
          files: |
            build/app/outputs/apk/release/app-release.apk
